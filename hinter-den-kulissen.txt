Das Debian-Paketmanagement-Buch -- Blick hinter die Kulissen eines freien Buches
================================================================================
:author:    Axel Beckert <abe@debian.org>, Frank Hofmann <frank.hofmann@efho.de>
:backend:   slidy
:data-uri:  http://www.dpmb.org/
:max-width: 94%
:icons:

Wir haben da so ein Buch angefangen ...
---------------------------------------

* Titel: Debian-Paketmanagement
* Autoren: Axel Beckert und Frank Hofmann
* Entstehung: seit Frühjahr 2013
* Umfang: etwa 500 Seiten
* ist vollständig in lesbarem Deutsch verfaßt
** Zielgruppe: fortgeschrittene Einsteiger, Profis
** auch eine englische Übersetzung ist in Vorbereitung

Inhalt des Buches
-----------------

* beschreibt detailliert den Umgang mit der Paketverwaltung auf
  deb-basierten Systemen via dpkg, APT und Aptitude
* fokussiert auf Debian GNU/Linux, passt aber auch für Ubuntu, LinuxMint, etc.
* Teil 1: Konzepte -- Ideen hinter der Paketverwaltung
* Teil 2: Werkzeuge -- die Programme und deren Möglichkeiten
* Teil 3: Praxis -- Lösungen für komplexere Alltagssituationen

Status
~~~~~~

* Teil 1 und 2: soweit komplett
* Teil 3: hat noch größere Lücken

Veröffentlichungen
------------------

* Inhalt steht unter einer freien Lizenz --
  http://creativecommons.org/licenses/by-sa/4.0/[CC BY-SA 4.0]
* https://github.com/dpmb/dpmb[Quellcode auf GitHub] verfügbar
* Aus dem Quellcode kann jeder selbst folgende Formate bauen:
** HTML (mehrere Varianten)
** E-Book (bisher PDF, EPUB und MobiPocket)
** Debian-Paket mit PDF, HTML und EPUB.
* Fertig gebaute E-Books zum Online-Lesen und direkten Download unter
  http://book.dpmb.org/ (mittels https://www.gitbook.com/book/dpmb/dpmb/details[Gitbook])
** Rendering bei Gitbook hat momentan noch Unschönheiten
* Gedrucktes Buch (kostenpflichtig) geplant, Veröffentlichung bei
  http://www.onyxneon.com/[Onyx Neon]

Wie entsteht das Buch
---------------------

* Basis: 
** Schreiben ist ein kreativer Prozess und bedingt daher eine
   entsprechende Stimmung -- geht nicht "auf Knopfdruck"
** Orientierung des Schreibprozesses am Entwicklungsweg von Software
** Auswahl der verwendeten (Software)Werkzeuge gemäß unseren Bedürfnissen

* Schreiben an einem festen Ort: hauptsächlich in Zürich und Berlin
** jeder werkelt weitestgehend unabhängig für sich
** Austausch via Telefon, Mail und Videokonferenz
** von Zeit zu Zeit ein explizites Zusammentreffen für das Buch
   (sogenannte "Buch Sprints")

* Schreiben von unterwegs aus
** Zusammentreffen im Rahmen von Linux-Events
** im Wohnmobil (Axel) und im Zug (Frank)
** auch etwas abgelegene Orte, um die entsprechende Ruhe zu haben und
   von nichts anderem abgelenkt zu werden

Quellen des Buches
------------------

* Hosting über die Plattform GitHub
** kostenfrei als Einzelperson bzw. Organisation
** sehr populär und vielen Entwicklern/Lesern vertraut
** erlaubt die unkomplizierte Koordination von Fremdbeiträgen

* Ablauf in drei Schritten:
** lokale Kopie vom Buch-Repo ziehen ("Repo klonen")
** Buch lokal bauen, bspw. via "make pdf", "make html" oder "dpkg-buildpackage"
** lesen, kommentieren und verbessern

Versionierung
-------------

* Versionskontrollsystem: Git
** freies, stabiles und sehr flexibles RCS
** Kombination aus zentralem Archiv und dezentralen Kopien
** dezentrales, verteiltes Arbeiten ohne permanente Abhängigkeit des Internets
** regelmäßiges Zusammenführen ("Synchronisieren") der Inhalte

* erlaubt ... 
** ... das zeitweise Arbeiten ohne Internet
** ... das Nachvollziehen, wer was wann worin geändert hat
** ... das Rückgängigmachen von Änderungen

Mitmachen und Feedback
----------------------

* Ablauf:
** lokale Kopie des Buch-Repos erzeugen ("Repo klonen")
** Änderungen durchführen und in der lokalen Instanz einchecken
** an uns via GitHub einen Pull Request schicken ("Vorschlag zu
   Änderungen")
** Vorschlag und/oder Kommentar per Mail schicken

* wir schauen uns die Änderungen bzw. den Vorschlag an
** wir akzeptieren den Vorschlag oder lehnen diesen ab
** falls akzeptiert, fügen wir die Änderungen via GitHub ein ("Merge")
** Synchronisation mit den lokalen Kopien, damit alle Mitwirkenden
   wieder auf dem aktuellen Stand sind

Software
--------

* lokal
** Git als VCS
** Asciidoc als plattformunabhängige Auszeichnungssprache des
   Buchinhalts
** Make zur automatisierten Übersetzung in die Ausgabeformate

* im Web
** GitHub zur Verwaltung, für Statistik, zur Koordination und für
   Benachrichtigungen
** Travis-CI für automatisches Übersetzen und Konfliktvermeidung bei
   Änderungen

Baustellen
----------

* woran arbeiten wir derzeit noch:
** Feinschliff Teil 2 -- konsistente Wortwahl, Stichworte
** Vervollständigung von Teil 3 -- Inhalt

* wo brauchen wir Unterstützung:
** Praxisteil (Teil 3) -- wir können nicht alle Szenarien nachbauen
** welche Probleme sind mit deb-Paketen und den Werkzeugen aufgetaucht,
   und wie wurde das Problem gelöst?


Von uns nicht genutzte Alternative zur Veröffentlichung
-------------------------------------------------------

* https://leanpub.com/[Leanpub] (primär E-Books, auch kostenlose
  Bücher oder Zahl-was-Du-willst-Schema möglich)
* https://www.publi.de/[Epubli] (Print-on-Demand, aber auch
  Vorab-Druck auf Vorschuß des Autors; Buchpreisbindung in Dtl., gibt
  aber auch https://www.epubli.co.uk/[epubli.co.uk])
* http://www.lulu.com/[Lulu] (primär Print-on-Demand)
* http://www.bookbaby.com/[BookBaby] (E-Books und gedruckte Bücher)

Markdown
--------

* Einfacher, aber auch weniger mächtig als Asciidoc
* Standard-Format für Bücher bei Leanpub und Gitbook

Varianten
~~~~~~~~~

* Markua (zukünftiger Markdown-Dialekt speziell für Bücher von Leanpub)
* LFM (Leanpub flavoured Markdown; auf Bücher angepasster Markdown-Dialekt)


Danke
-----

Kontakt
